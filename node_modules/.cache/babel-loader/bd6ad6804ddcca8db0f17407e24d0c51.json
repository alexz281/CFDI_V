{"remainingRequest":"C:\\Users\\a.coronel\\CFDI_V\\cfdi\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\a.coronel\\CFDI_V\\cfdi\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\a.coronel\\CFDI_V\\cfdi\\src\\services\\cfdi.js","dependencies":[{"path":"C:\\Users\\a.coronel\\CFDI_V\\cfdi\\src\\services\\cfdi.js","mtime":1620777695691},{"path":"C:\\Users\\a.coronel\\CFDI_V\\cfdi\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\a.coronel\\CFDI_V\\cfdi\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\a.coronel\\CFDI_V\\cfdi\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/a.coronel/CFDI_V/cfdi/src/services/cfdi.js"],"names":["urlFull","optionsDefault","getcfdireporissues","cfdiservices","companygroup","company","cfditype","datestart","dateend","pageSize","pageNo","fetch","method","res","json"],"mappings":"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","sourcesContent":["import { urlFull, optionsDefault } from './config'\nconst getcfdireporissues = urlFull('Issued?')\nconst cfdiservices = {\n    async getcfdireporissues(companygroup, company, cfditype, datestart, dateend, pageSize, pageNo) {\n        if (company != null && cfditype != null && datestart != null && dateend != null) {\n            const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&company=${company}&cfditype=${cfditype}&cfdidatetimestart=${datestart}&cfdidatetimeend=${dateend}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n            const json = await res.json()\n            return json\n        }\n        if (company === null && cfditype === null && datestart === null && dateend === null) {\n            const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n            const json = await res.json()\n            return json\n        }\n        if (company != null && cfditype === null && datestart === null && dateend === null) {\n            const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&company=${company}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n            const json = await res.json()\n            return json\n        }\n        if (company != null && cfditype != null && datestart === null && dateend === null) {\n            const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&company=${company}&cfditype=${cfditype}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n            const json = await res.json()\n            return json\n        }\n        if (company === null && cfditype != null && datestart === null && dateend === null) {\n            const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&cfditype=${cfditype}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n            const json = await res.json()\n            return json\n        }\n        if (datestart != null && dateend != null) {\n            if (company != null && cfditype === null) {\n                const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&company=${company}&cfdidatetimestart=${datestart}&cfdidatetimeend=${dateend}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n                const json = await res.json()\n                return json\n            }\n            if (company === null && cfditype != null) {\n                const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&cfditype=${cfditype}&cfdidatetimestart=${datestart}&cfdidatetimeend=${dateend}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n                const json = await res.json()\n                return json\n            }\n            if (company != null && cfditype != null) {\n                const res = await fetch(`${getcfdireporissues}companygroup=${companygroup}&cfdidatetimestart=${datestart}&cfdidatetimeend=${dateend}&pageSize=${pageSize}&pageNo=${pageNo}`, { method: 'GET', ...optionsDefault, })\n                const json = await res.json()\n                return json\n            }\n        }\n    }\n}\nexport default {...cfdiservices }"]}]}